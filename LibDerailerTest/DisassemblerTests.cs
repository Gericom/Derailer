using System;
using Gee.External.Capstone.Arm;
using LibDerailer.CodeGraph;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace LibDerailerTest
{
    [TestClass]
    public class DisassemblerTests
    {
        [TestMethod]
        public void DisassembleArmTest()
        {
            var code = new byte[]
            {
                0x24, 0x10, 0x9F, 0xE5, 0x00, 0x30, 0xA0, 0xE3, 0x00, 0x20, 0x91, 0xE5,
                0xA8, 0x10, 0x92, 0xE5, 0x01, 0x00, 0x50, 0xE1, 0x02, 0x00, 0x00, 0x3A,
                0xAC, 0x10, 0x92, 0xE5, 0x01, 0x00, 0x50, 0xE1, 0x01, 0x30, 0xA0, 0x93,
                0x03, 0x00, 0xA0, 0xE1, 0x1E, 0xFF, 0x2F, 0xE1, 0x10, 0xAA, 0x17, 0x02
            };
            var func = Disassembler.DisassembleArm(code, 0x02059C04, ArmDisassembleMode.Arm);
            Assert.AreEqual(3, func.BasicBlocks.Count);
        }

        [TestMethod]
        public void DisassembleArmStackTest()
        {
            var code = new byte[]
            {
                0x70, 0x40, 0x2D, 0xE9, 0x10, 0xD0, 0x4D, 0xE2, 0x00, 0x60, 0xA0, 0xE1,
                0x20, 0x00, 0x96, 0xE5, 0x01, 0x50, 0xA0, 0xE1, 0x00, 0x00, 0x90, 0xE5,
                0x02, 0x40, 0xA0, 0xE1, 0x00, 0x00, 0x90, 0xE5, 0x00, 0x0E, 0xA0, 0xE1,
                0x20, 0x0E, 0xA0, 0xE1, 0x06, 0x00, 0x40, 0xE2, 0x01, 0x00, 0x50, 0xE3,
                0x10, 0xD0, 0x8D, 0x82, 0x70, 0x40, 0xBD, 0x88, 0x1E, 0xFF, 0x2F, 0x81,
                0x00, 0x20, 0x94, 0xE5, 0x00, 0x10, 0x95, 0xE5, 0x05, 0x00, 0xA0, 0xE1,
                0x01, 0x10, 0x82, 0xE0, 0xA1, 0x1F, 0x81, 0xE0, 0xC1, 0x10, 0xA0, 0xE1,
                0x28, 0x10, 0x86, 0xE5, 0x04, 0x30, 0x94, 0xE5, 0x04, 0x20, 0x95, 0xE5,
                0x04, 0x10, 0xA0, 0xE1, 0x02, 0x20, 0x83, 0xE0, 0xA2, 0x2F, 0x82, 0xE0,
                0xC2, 0x20, 0xA0, 0xE1, 0x2C, 0x20, 0x86, 0xE5, 0x08, 0x30, 0x94, 0xE5,
                0x08, 0x20, 0x95, 0xE5, 0x02, 0x20, 0x83, 0xE0, 0xA2, 0x2F, 0x82, 0xE0,
                0xC2, 0x20, 0xA0, 0xE1, 0x30, 0x20, 0x86, 0xE5, 0xCA, 0xBB, 0x04, 0xEB,
                0xA0, 0x0F, 0x80, 0xE0, 0xC0, 0x00, 0xA0, 0xE1, 0x60, 0x00, 0x86, 0xE5,
                0x00, 0x20, 0x94, 0xE5, 0x00, 0x10, 0x95, 0xE5, 0x00, 0x00, 0x8D, 0xE2,
                0x01, 0x10, 0x42, 0xE0, 0x00, 0x10, 0x8D, 0xE5, 0x04, 0x30, 0x94, 0xE5,
                0x04, 0x20, 0x95, 0xE5, 0x00, 0x10, 0xA0, 0xE1, 0x02, 0x20, 0x43, 0xE0,
                0x04, 0x20, 0x8D, 0xE5, 0x08, 0x30, 0x94, 0xE5, 0x08, 0x20, 0x95, 0xE5,
                0x02, 0x20, 0x43, 0xE0, 0x08, 0x20, 0x8D, 0xE5, 0x47, 0xBC, 0x04, 0xEB,
                0x00, 0x00, 0x9D, 0xE5, 0xB0, 0x05, 0xC6, 0xE1, 0x04, 0x00, 0x9D, 0xE5,
                0xB2, 0x05, 0xC6, 0xE1, 0x08, 0x00, 0x9D, 0xE5, 0xB4, 0x05, 0xC6, 0xE1,
                0x10, 0xD0, 0x8D, 0xE2, 0x70, 0x40, 0xBD, 0xE8, 0x1E, 0xFF, 0x2F, 0xE1
            };

            var func = Disassembler.DisassembleArm(code, 0x02018F94, ArmDisassembleMode.Arm);
            //Assert.AreEqual(3, func.BasicBlocks.Count);
        }
    }
}